@inject IStringLocalizer<PacketLossAnalyzerPage> L
@page "/packet-loss"

<MudText Typo="Typo.h4">@L["PageTitle"]</MudText>

<MudTabs Elevation="2" Rounded="true" ActivePanelIndex="_activePanelIndex" ApplyEffectsToContainer="true" PanelClass="pa-6">
	<MudTabPanel Text="@L["FilesTabHeader"]">
		<InputFile id="fileInput" OnChange="UploadFiles" hidden multiple />
		<MudButton HtmlTag="label"
				   Variant="Variant.Filled"
				   Color="Color.Primary"
				   StartIcon="@Icons.Filled.CloudUpload"
				   for="fileInput" Disabled="_files.Any(x => x.IsReadingInProgress == true)">
			@L["ChooseFilesButtonCaption"]
		</MudButton>
		@if (_files != null)
		{
			<MudText Typo="@Typo.h6">@_files.Count() @L["FileCountCaption"]</MudText>
			<MudList>
				@foreach (var file in _files)
				{
					<MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
						<div class="d-flex flex-row">
							@file.Name <code class="ml-2">@file.Size bytes</code>
							<MudSpacer />
							@if (file.IsReadingInProgress == true)
							{
								<MudProgressCircular Indeterminate="true" Color=Color.Primary />
							}
							else
							{
								@if (_files.First() != file)
								{
									<MudTooltip Text="@L["MoveFileUp"]">
										<MudIconButton Icon="@Icons.Material.Outlined.ArrowUpward" OnClick="@( () => MoveFileUpward(file))" />
									</MudTooltip>
								}
								@if (_files.Last() != file)
								{
									<MudTooltip Text="@L["MoveFileDown"]">
										<MudIconButton Icon="@Icons.Material.Outlined.ArrowDownward" OnClick="@( () => MoveFileDownward(file))" />
									</MudTooltip>
								}

								@if (file.IsValid == false)
								{
									<MudIcon Icon="@Icons.Material.Outlined.Error" Color="Color.Error" />
								}
								@if (file.IsValid == true)
								{
									<MudIcon Icon="@Icons.Material.Outlined.Done" Color="Color.Success" />
								}

							}

						</div>
					</MudListItem>
				}
			</MudList>
			@if (_files.Count >= 2)
			{
				<div class="d-flex flex-row">
					<MudSpacer />
					<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GoToNextTab">@L["GoNextPageButton"]</MudButton>
				</div>
			}
		}
	</MudTabPanel>
	<MudTabPanel Text="@L["ResultTabHeader"]" Disabled="@(_files.Count < 2)">
		<div class="d-flex flex-column align-start">
			<MudSwitch @bind-Checked="@_biderectionalRead" Label="@L["BiderectionalReadCaption"]" Color="Color.Success" />
			<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="StartAnalyze" Disabled="_analzying == true">@L["StartAnalyzeButtonCaption"]</MudButton>
			@if (_analzying == true)
			{
				<MudProgressCircular Class="align-self-center my-4" Color="Color.Secondary" Indeterminate="true" />
			}
		</div>
		@if (_result != null)
		{
			<PacketLossResult Result="_result" />
		}
	</MudTabPanel>

</MudTabs>

@code {

}
