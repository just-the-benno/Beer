<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1" xml:space="preserve">
    <value>Subnet Mask</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>Impress Serve</value>
  </data>
  <data name="11" xml:space="preserve">
    <value>Resource Location Server</value>
  </data>
  <data name="12" xml:space="preserve">
    <value>Host Name</value>
  </data>
  <data name="13" xml:space="preserve">
    <value>Boot File Size</value>
  </data>
  <data name="14" xml:space="preserve">
    <value>Merit Dump File</value>
  </data>
  <data name="15" xml:space="preserve">
    <value>Domain Name</value>
  </data>
  <data name="16" xml:space="preserve">
    <value>Swap Server</value>
  </data>
  <data name="17" xml:space="preserve">
    <value>Root Path</value>
  </data>
  <data name="18" xml:space="preserve">
    <value>Extensions Path</value>
  </data>
  <data name="19" xml:space="preserve">
    <value>IP Forwarding Enable</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>Time Offset</value>
  </data>
  <data name="20" xml:space="preserve">
    <value>Non-Local Source Routing Enable</value>
  </data>
  <data name="21" xml:space="preserve">
    <value>Policy Filter</value>
  </data>
  <data name="22" xml:space="preserve">
    <value>Maximum Datagram Reassembly Size</value>
  </data>
  <data name="23" xml:space="preserve">
    <value>Default IP Time-to-live</value>
  </data>
  <data name="24" xml:space="preserve">
    <value>Path MTU Aging Timeout</value>
  </data>
  <data name="25" xml:space="preserve">
    <value>Path MTU Plateau Table</value>
  </data>
  <data name="26" xml:space="preserve">
    <value>Interface MTU</value>
  </data>
  <data name="27" xml:space="preserve">
    <value>All Subnets are Local</value>
  </data>
  <data name="28" xml:space="preserve">
    <value>Broadcast Address</value>
  </data>
  <data name="29" xml:space="preserve">
    <value>Perform Mask Discovery</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>Router</value>
  </data>
  <data name="30" xml:space="preserve">
    <value>Mask Supplier</value>
  </data>
  <data name="31" xml:space="preserve">
    <value>Perform Router Discovery</value>
  </data>
  <data name="32" xml:space="preserve">
    <value>Router Solicitation Address</value>
  </data>
  <data name="33" xml:space="preserve">
    <value>Static Route</value>
  </data>
  <data name="34" xml:space="preserve">
    <value>Trailer Encapsulation</value>
  </data>
  <data name="35" xml:space="preserve">
    <value>ARP Cache Timeout</value>
  </data>
  <data name="36" xml:space="preserve">
    <value>Ethernet Encapsulation</value>
  </data>
  <data name="37" xml:space="preserve">
    <value>TCP Default TTL</value>
  </data>
  <data name="38" xml:space="preserve">
    <value>TCP Keepalive Interval</value>
  </data>
  <data name="39" xml:space="preserve">
    <value>TCP Keepalive Garbage</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>Time Server</value>
  </data>
  <data name="40" xml:space="preserve">
    <value>Network Information Service Domain</value>
  </data>
  <data name="41" xml:space="preserve">
    <value>Network Information Servers</value>
  </data>
  <data name="42" xml:space="preserve">
    <value>Network Time Protocol Servers</value>
  </data>
  <data name="43" xml:space="preserve">
    <value>Vendor Specific Information</value>
  </data>
  <data name="44" xml:space="preserve">
    <value>NetBIOS over TCP/IP Name Server</value>
  </data>
  <data name="45" xml:space="preserve">
    <value>NetBIOS over TCP/IP Datagram Distribution Server</value>
  </data>
  <data name="46" xml:space="preserve">
    <value>NetBIOS over TCP/IP Node Type</value>
  </data>
  <data name="47" xml:space="preserve">
    <value>NetBIOS over TCP/IP Scope</value>
  </data>
  <data name="48" xml:space="preserve">
    <value>X Window System Font Server</value>
  </data>
  <data name="49" xml:space="preserve">
    <value>X Window System Display Manager</value>
  </data>
  <data name="5" xml:space="preserve">
    <value>Name Server</value>
  </data>
  <data name="50" xml:space="preserve">
    <value>Requested IP Address</value>
  </data>
  <data name="51" xml:space="preserve">
    <value>IP Address Lease Time</value>
  </data>
  <data name="52" xml:space="preserve">
    <value>Option Overload</value>
  </data>
  <data name="53" xml:space="preserve">
    <value>DHCP Message Type</value>
  </data>
  <data name="54" xml:space="preserve">
    <value>Server Identifier</value>
  </data>
  <data name="55" xml:space="preserve">
    <value>Parameter Request List</value>
  </data>
  <data name="56" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="57" xml:space="preserve">
    <value>Maximum DHCP Message Size</value>
  </data>
  <data name="58" xml:space="preserve">
    <value>Renewal (T1) Time Value</value>
  </data>
  <data name="59" xml:space="preserve">
    <value>Rebinding (T2) Time Value</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>Domain Name Server</value>
  </data>
  <data name="60" xml:space="preserve">
    <value>Vendor class identifier</value>
  </data>
  <data name="61" xml:space="preserve">
    <value>Client-identifier</value>
  </data>
  <data name="64" xml:space="preserve">
    <value>Network Information Service+ Domain</value>
  </data>
  <data name="65" xml:space="preserve">
    <value>Network Information Service+ Servers</value>
  </data>
  <data name="66" xml:space="preserve">
    <value>TFTP server name</value>
  </data>
  <data name="67" xml:space="preserve">
    <value>Bootfile name</value>
  </data>
  <data name="68" xml:space="preserve">
    <value>Mobile IP Home Agent</value>
  </data>
  <data name="69" xml:space="preserve">
    <value>Simple Mail Transport Protocol (SMTP) Server</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>Log Server</value>
  </data>
  <data name="70" xml:space="preserve">
    <value>Post Office Protocol (POP3) Server</value>
  </data>
  <data name="71" xml:space="preserve">
    <value>Network News Transport Protocol (NNTP) Server</value>
  </data>
  <data name="72" xml:space="preserve">
    <value>Default World Wide Web (WWW) Server</value>
  </data>
  <data name="73" xml:space="preserve">
    <value>Default Finger Server</value>
  </data>
  <data name="74" xml:space="preserve">
    <value>Default Internet Relay Chat (IRC) Server</value>
  </data>
  <data name="75" xml:space="preserve">
    <value>StreetTalk Server</value>
  </data>
  <data name="76" xml:space="preserve">
    <value>StreetTalk Directory Assistance (STDA) Server</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>Cookie Server</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>LPR Server</value>
  </data>
</root>