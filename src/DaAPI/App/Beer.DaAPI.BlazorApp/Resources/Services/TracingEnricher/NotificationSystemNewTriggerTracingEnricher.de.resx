<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="10.1" xml:space="preserve">
    <value>Trigger gestartet</value>
  </data>
  <data name="10.1.1" xml:space="preserve">
    <value>Trigger gestarted</value>
  </data>
  <data name="10.1.2" xml:space="preserve">
    <value>Pipeline kann den Trigger verarbeiten</value>
  </data>
  <data name="10.1.3" xml:space="preserve">
    <value>Trigger ist passend für die Pipeline</value>
  </data>
  <data name="10.1.4" xml:space="preserve">
    <value>Trigger ist NICHT passend für die Pipeline</value>
  </data>
  <data name="10.1.5" xml:space="preserve">
    <value>Trigger abgeschlossen</value>
  </data>
  <data name="10.1.6.1" xml:space="preserve">
    <value>Pipeline verarbeitet den Trigger</value>
  </data>
  <data name="10.1.6.2.1.1" xml:space="preserve">
    <value>Beginne mit der Prüfung der Bereichsbedingung</value>
  </data>
  <data name="10.1.6.2.1.2" xml:space="preserve">
    <value>Bereichs Id wurde nicht im Stammereich gefunden</value>
  </data>
  <data name="10.1.6.2.1.3" xml:space="preserve">
    <value>Kindbereiche sind bei der Suche ausgeschlossen</value>
  </data>
  <data name="10.1.6.2.1.4" xml:space="preserve">
    <value>Überprüfe Kindbereiche</value>
  </data>
  <data name="10.1.6.2.1.5" xml:space="preserve">
    <value>Bereich in den Kinderbereichen gefunden</value>
  </data>
  <data name="10.1.6.2.1.6" xml:space="preserve">
    <value>Keine untergeordnete Bereiche gefunden. Bedingung wurde nicht erfüllt</value>
  </data>
  <data name="10.1.6.3" xml:space="preserve">
    <value>Keine Bedingung konfiguriert. Nächste Schritt Ausführung</value>
  </data>
  <data name="10.1.6.4.1.1" xml:space="preserve">
    <value>Ausführer "NxOsStaticRouteUpdater" gestarted</value>
  </data>
  <data name="10.1.6.4.1.2" xml:space="preserve">
    <value>Gerät ist nicht erreichbar</value>
  </data>
  <data name="10.1.6.4.1.3" xml:space="preserve">
    <value>Entferne alte Binding</value>
  </data>
  <data name="10.1.6.4.1.3.1.1" xml:space="preserve">
    <value>Sende den Befehl an die NX OS API</value>
  </data>
  <data name="10.1.6.4.1.3.1.2" xml:space="preserve">
    <value>Befehl gesendet</value>
  </data>
  <data name="10.1.6.4.1.3.1.3" xml:space="preserve">
    <value>Nich authorisiert die NX OS API zu benutzen</value>
  </data>
  <data name="10.1.6.4.1.3.1.4" xml:space="preserve">
    <value>Befehl erfolgreich gesendet</value>
  </data>
  <data name="10.1.6.4.1.3.1.5" xml:space="preserve">
    <value>Befehl erfolgreich abgehandelt</value>
  </data>
  <data name="10.1.6.4.1.4" xml:space="preserve">
    <value>Entfernen der alten Binding ist fehlgeschlagen</value>
  </data>
  <data name="10.1.6.4.1.5" xml:space="preserve">
    <value>Alte Beziehugn wurde erfolgreich entfernt</value>
  </data>
  <data name="10.1.6.4.1.6" xml:space="preserve">
    <value>Füge eine neue Binding hinzu</value>
  </data>
  <data name="10.1.6.4.1.6.1.1" xml:space="preserve">
    <value>Sende den Befehl an die NX OS API</value>
  </data>
  <data name="10.1.6.4.1.6.1.2" xml:space="preserve">
    <value>Befehl gesendet</value>
  </data>
  <data name="10.1.6.4.1.6.1.3" xml:space="preserve">
    <value>Nich authorisiert die NX OS API zu benutzen</value>
  </data>
  <data name="10.1.6.4.1.6.1.4" xml:space="preserve">
    <value>Hinzufügen Befehl erfolgreich ausgeführt </value>
  </data>
  <data name="10.1.6.4.1.6.1.5" xml:space="preserve">
    <value>Hinzufügen  Befehl erfolgreich abgehandelt</value>
  </data>
  <data name="10.1.6.4.1.7" xml:space="preserve">
    <value>Hinzufügen der neuen Binding fehlgeschlagen</value>
  </data>
  <data name="10.1.6.4.1.8" xml:space="preserve">
    <value>Neue Binding wurde erfolgreich hinzugefügt</value>
  </data>
  <data name="10.1.6.4.1.9" xml:space="preserve">
    <value>Ausführer "NxOsStaticRouteUpdater" fertig abgehandelt</value>
  </data>
  <data name="DHCPv6ScopeIdConditionSimpleView_ScopeId" xml:space="preserve">
    <value>Bereiche</value>
  </data>
  <data name="DHCPv6ScopeIdConditionSimpleView_ScopeIds" xml:space="preserve">
    <value>Gültige Bereiche</value>
  </data>
  <data name="NxOsAPIBindingUpaterErrorResult_Command" xml:space="preserve">
    <value>CLI Befehl</value>
  </data>
  <data name="NxOsAPIBindingUpaterErrorResult_ErrMsg" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="NxOsAPIBindingUpaterErrorResult_ErrMsgExtented" xml:space="preserve">
    <value>Fehlerdetails</value>
  </data>
  <data name="NxOsAPIBindingUpaterErrorResult_StatusCode" xml:space="preserve">
    <value>HTTP Antwort Code</value>
  </data>
  <data name="NxOsAPIBindingUpaterErrorResult_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsAPIBindingUpaterNotAuthorizeResult_Command" xml:space="preserve">
    <value>CLI Befehlt</value>
  </data>
  <data name="NxOsAPIBindingUpaterNotAuthorizeResult_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsAPIBindingUpaterNotAuthorizeResult_Username" xml:space="preserve">
    <value>Benutzername</value>
  </data>
  <data name="NxOsAPIBindingUpaterResult_Command" xml:space="preserve">
    <value>CLI Command</value>
  </data>
  <data name="NxOsAPIBindingUpaterResult_StatusCode" xml:space="preserve">
    <value>HTTP Antwort Code</value>
  </data>
  <data name="NxOsAPIBindingUpaterResult_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsAPIBindingUpater_Command" xml:space="preserve">
    <value>CLI Befehl</value>
  </data>
  <data name="NxOsAPIBindingUpater_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsDeviceConnectionRequest_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsDeviceNewBindindRequest_NewBinding" xml:space="preserve">
    <value>Neue Binding</value>
  </data>
  <data name="NxOsDeviceNewBindindRequest_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="NxOsDeviceRemoveOldBindindRequest_OldBinding" xml:space="preserve">
    <value>Alte Binding</value>
  </data>
  <data name="NxOsDeviceRemoveOldBindindRequest_Url" xml:space="preserve">
    <value>NxOS Geräte URL</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdatedTriggerFirstItem_BothBindings" xml:space="preserve">
    <value>IPv6 Präfix Binding geändert  von{0}/{1} via {2} zu {3}/{4} via {5}</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdatedTriggerFirstItem_OnlyNewBinding" xml:space="preserve">
    <value>IPv6 Präfix Binding hinzugefügt {0}/{1} via {2}</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdatedTriggerFirstItem_OnlyOldBinding" xml:space="preserve">
    <value>IPv6 Präfix Binding entfernt {0}/{1} via {2}</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdated_Name" xml:space="preserve">
    <value>Präfix geändert</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdated_NewBinding" xml:space="preserve">
    <value>Neue Binding</value>
  </data>
  <data name="PrefixEdgeRouterBindingUpdated_OldBinding" xml:space="preserve">
    <value>Alte Binding</value>
  </data>
  <data name="ProcedureIdentifier" xml:space="preserve">
    <value>Trigger occured</value>
  </data>
  <data name="SimplePipeline_Actor" xml:space="preserve">
    <value>Ausführer</value>
  </data>
  <data name="SimplePipeline_Condition" xml:space="preserve">
    <value>Bedingung</value>
  </data>
  <data name="SimplePipeline_Id" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="SimplePipeline_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SimplePipeline_Trigger" xml:space="preserve">
    <value>Trigger</value>
  </data>
</root>