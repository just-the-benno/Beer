@page "/scopes/dhcpv4/details/{ScopeId}"

@using static Beer.DaAPI.Shared.Requests.DHCPv4ScopeRequests.V1.DHCPv4ScopeAddressPropertyReqest
@using Humanizer

@attribute [Authorize]
@inject DaAPIService _service
@inject IStringLocalizer<DHCPv4ScopeDetailsPage> L
@inject NavigationManager _navManager
@inject ISnackbar _snackBarService

<BeerShowCircularLoadingIndicatorWhileNull Item="_properties" Text="@L["LoadingDetailsMessage"]">
	<MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-4">@String.Format(L["PageTitle"], _properties.Name)</MudText>

	<DaAPIDHCPLeaseTable ScopeId="Guid.Parse(ScopeId)" IncludeChildren="true" TLease="DHCPv4LeaseOverview"
						 LeaseGetter="_service.GetDHCPv4LeasesByScope" LeaseDeleter="_service.SendCancelDHCPv4LeaseRequest"
						 ScopeLinkGetter="@( (x) => $"/scopes/dhcpv4/details/{x}")">
		<ClientIdentifierContent>
			@if (context.MacAddress != null)
			{
				<MudText Typo="Typo.subtitle2">@(Beer.DaAPI.Core.Common.ByteHelper.ToString(context.MacAddress,':'))</MudText>
			}
			else
			{
				<span>@L["NoMacAddressFound"]</span>
			}
		</ClientIdentifierContent>
	</DaAPIDHCPLeaseTable>


	<DaAPILeaseEventHistory ScopeId="Guid.Parse(ScopeId)" DisplayIPv6Packets="false"
							PacketRequestLoader="@( (id,response) => response == true ? _service.GetDHCPv4PacketResponse(id) :  _service.GetDHCPv4PacketRequest(id) )"
							FilterMethod="@_service.GetDHCPv4LeaseHistory" />

</BeerShowCircularLoadingIndicatorWhileNull>

@code {

}
